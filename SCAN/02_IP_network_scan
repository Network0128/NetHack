import socket
import ipaddress

# 사용자 입력 받기
start_ip = input("Start IP (ex: 192.168.1.10): ")
end_ip = input("End IP (ex: 192.168.1.20): ")
port = int(input("Port number to scan: "))

# IP를 정수로 변환
start = int(ipaddress.ip_address(start_ip))
end = int(ipaddress.ip_address(end_ip))

# 스캔 및 출력
print(f"{start_ip} ~ {end_ip}, scanning port {port}")
for ip_int in range(start, end + 1):
    ip = str(ipaddress.ip_address(ip_int))
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(1)
    result = sock.connect_ex((ip, port))
    if result == 0:
        status = "OPEN"
    else:
        status = "CLOSED"
    print(f"{ip}:{port} - {status}")
    sock.close()

print("Scan completed")


-----------함수와 with 구문을 사용하여 간단히 구현-------------------------------
1) 함수 분리
scan_ip_range() 함수를 정의하여 IP 범 포트 스캔 작업을 모듈화했습니다. 이를 통해 메인 코드와 별도로립적 작업이 가능하며, 추후 재사용하거나 확장하기 쉬워집니다.
2) with 구문 활용
소켓 객체를 with 구문 내에서 생성하면, 블록 종료 시 자동으로 소켓이 닫혀 코드가 더 간결해집니다.
3) 가독성 개선
시작 IP와 IP를 정수로 변환해 반복문에서 바로 사용할 수 있도록 하였고, 스캔 결과를 바로 출력하도록 구성하여 코드가 직관적입니다.
이 코드는 단순하게 리팩토링한 버전으로, 사용자의 입력을 받아 지정한 IP 범위 내에서 특정 포트가 열려있는지 확인하는 기능을 제공합니다

import socket
import ipaddress

def scan_ip_range(start_ip, end_ip, port):
    # 시작 IP와 종료 IP를 정수형으로 변환
    start = int(ipaddress.ip_address(start_ip))
    end = int(ipaddress.ip_address(end_ip))
    
    #위의 범위 내에서 차례 포트 스캔 실행
    for ip_int in range(start, end +1):
        ip = str(ipaddress.ip_address(ip_int))
        # with 구문을 사용하여 소켓을 자동으로 닫음
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as sock:
            sock.settimeout(1)
            if sock.connect_ex((ip, port)) == 0:
                status = "OPEN"
            else:
                status = "CLOSED"
        print(f"{ip}:{port} - {status}")

if __name__ == '__main__':
    start_ip = input("Start IP (ex: 192.168.1.10): ")
    end_ip = input("End IP (ex: 192.168.1.20): ")
    port = int(input("Port number to scan: "))
    
    print(f"{start_ip} ~ {end_ip}, scanning port {port}")
    scan_ip_range(start_ip, end_ip, port)
    print("Scan completed")

